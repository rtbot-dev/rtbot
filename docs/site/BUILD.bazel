load("@npm//:@docusaurus/core/package_json.bzl", docusaurus_bin = "bin")
load("@aspect_bazel_lib//lib:copy_to_directory.bzl", "copy_to_directory")
load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("//tools/generator:generator.bzl", "rtbot_generate")

rtbot_generate(
    name = "mdx-core",
    target = "markdown",
    srcs = ["//libs/core:md"],
)

rtbot_generate(
    name = "mdx-std",
    target = "markdown",
    srcs = ["//libs/std:md"],
)

copy_to_directory(
    # Name of the rule.
    name = "mdx-core-copy",
    srcs = [":mdx-core"],
    out = "docs/operators/core",
    replace_prefixes = {
      "mdx-core": ".",
    }
)

copy_to_directory(
    # Name of the rule.
    name = "mdx-std-copy",
    srcs = [":mdx-std"],
    out = "docs/operators/std",
    replace_prefixes = {
      "mdx-std": ".",
    }
)

copy_file(
    name = "public-wasm-release",
    src = "//libs/api:rtbot-wasm/bindings-cpp-wasm.wasm",
    # notice that the src part is needed for the web worker api to work
    out = "static/bindings-cpp-wasm.wasm",
)

_DEPS = [
    "//:package_json",
    "//:node_modules/@docusaurus/core",
    "//:node_modules/@docusaurus/preset-classic",
    "//:node_modules/@mdx-js/react",
    "//:node_modules/@monaco-editor/react",
    "//:node_modules/@rtbot-dev/rtbot",
    "//:node_modules/@rtbot-dev/wasm",
    "//:node_modules/autoprefixer",
    "//:node_modules/clsx",
    "//:node_modules/json5",
    "//:node_modules/plotly.js",
    "//:node_modules/postcss",
    "//:node_modules/prism-react-renderer",
    "//:node_modules/react",
    "//:node_modules/react-plotly.js",
    "//:node_modules/react-dom",
    "//:node_modules/rxjs",
    "//:node_modules/tailwindcss",
    "//:node_modules/usehooks-ts",
]

docusaurus_bin.docusaurus_binary(
    name = "build",
    # TODO: compute the output dir
    args = ["build", "docs/site", "--out-dir /home/robert/Documents/rtbot-dev/rtbot/build"],
    data = glob(
        ["**/*"],
        exclude = ["node_modules/**/*"],
    ) + [ ":mdx-core-copy"] + _DEPS,
)

docusaurus_bin.docusaurus_binary(
    name = "start",
    # TODO: compute the output dir
    args = ["start", "docs/site"],
    data = glob(
        ["**/*"],
        exclude = ["node_modules/**/*"],
    ) + [":mdx-core-copy", ":mdx-std-copy", ":public-wasm-release"] + _DEPS,
    tags = ["ibazel_notify_changes"],
)

